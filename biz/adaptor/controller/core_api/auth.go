// Code generated by hertz generator.

package core_api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	core_api "github.com/xh-polaris/meowchat-core-api/biz/application/dto/meowchat/core_api"
)

// SignIn .
// @router /auth/sign_in [POST]
func SignIn(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.SignInReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.SignInResp)

	c.JSON(consts.StatusOK, resp)
}

// SendVerifyCode .
// @router /auth/send_verify_code [POST]
func SendVerifyCode(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.SendVerifyCodeReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.SendVerifyCodeResp)

	c.JSON(consts.StatusOK, resp)
}

// SetPassword .
// @router /auth/set_password [POST]
func SetPassword(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.SetPasswordReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.SetPasswordResp)

	c.JSON(consts.StatusOK, resp)
}
