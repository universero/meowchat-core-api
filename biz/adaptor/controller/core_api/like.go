// Code generated by hertz generator.

package core_api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	core_api "github.com/xh-polaris/meowchat-core-api/biz/application/dto/meowchat/core_api"
)

// DoLike .
// @router /like/do_like [POST]
func DoLike(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.DoLikeReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.DoLikeResp)

	c.JSON(consts.StatusOK, resp)
}

// GetUserLiked .
// @router /like/get_user_liked [GET]
func GetUserLiked(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.GetUserLikedReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.GetUserLikedResp)

	c.JSON(consts.StatusOK, resp)
}

// GetLikedCount .
// @router /like/get_count [GET]
func GetLikedCount(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.GetLikedCountReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.GetLikedCountResp)

	c.JSON(consts.StatusOK, resp)
}

// GetLikedUsers .
// @router /like/get_liked_users [GET]
func GetLikedUsers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.GetLikedUsersReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.GetLikedUsersResp)

	c.JSON(consts.StatusOK, resp)
}

// GetUserLikes .
// @router /like/get_user_likes [GET]
func GetUserLikes(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.GetUserLikesReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.GetUserLikesResp)

	c.JSON(consts.StatusOK, resp)
}
