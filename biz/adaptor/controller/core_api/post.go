// Code generated by hertz generator.

package core_api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	core_api "github.com/xh-polaris/meowchat-core-api/biz/application/dto/meowchat/core_api"
)

// GetPostPreviews .
// @router /post/get_post_previews [POST]
func GetPostPreviews(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.GetPostPreviewsReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.GetPostPreviewsResp)

	c.JSON(consts.StatusOK, resp)
}

// GetPostDetail .
// @router /post/get_post_detail [GET]
func GetPostDetail(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.GetPostDetailReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.GetPostDetailResp)

	c.JSON(consts.StatusOK, resp)
}

// NewPost .
// @router /post/new_post [POST]
func NewPost(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.NewPostReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.NewPostResp)

	c.JSON(consts.StatusOK, resp)
}

// DeletePost .
// @router /post/delete_post [POST]
func DeletePost(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.DeletePostReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.DeletePostResp)

	c.JSON(consts.StatusOK, resp)
}

// SetOfficial .
// @router /post/set_official [POST]
func SetOfficial(ctx context.Context, c *app.RequestContext) {
	var err error
	var req core_api.SetOfficialReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(core_api.SetOfficialResp)

	c.JSON(consts.StatusOK, resp)
}
