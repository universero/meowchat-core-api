// Code generated by hertz generator.

package main

import (
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/hertz-contrib/obs-opentelemetry/tracing"
	"github.com/xh-polaris/gopkg/hertz/middleware"
	logx "github.com/xh-polaris/gopkg/util/log"
	"go.opentelemetry.io/contrib/propagators/b3"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/propagation"

	"github.com/xh-polaris/meowchat-core-api/biz/adaptor"
	"github.com/xh-polaris/meowchat-core-api/biz/infrastructure/util/log"
	"github.com/xh-polaris/meowchat-core-api/provider"
)

func Init() {
	provider.Init()
	adaptor.Init()
	hlog.SetLogger(logx.NewHlogLogger())
	otel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(b3.New(), propagation.Baggage{}, propagation.TraceContext{}))
}

func main() {
	Init()
	c := provider.Get().Config

	tracer, cfg := tracing.NewServerTracer()
	h := server.Default(
		server.WithHostPorts(c.ListenOn),
		tracer,
	)
	h.Use(tracing.ServerMiddleware(cfg), middleware.EnvironmentMiddleware)

	register(h)
	log.Info("server start")
	h.Spin()
}
